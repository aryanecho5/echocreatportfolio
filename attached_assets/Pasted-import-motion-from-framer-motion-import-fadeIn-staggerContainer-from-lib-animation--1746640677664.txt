import { motion } from 'framer-motion';
import { fadeIn, staggerContainer } from '@/lib/animation';
import { Play } from 'lucide-react';

// Define video samples without descriptions
interface VideoSample {
  id: number;
  title: string;
  thumbnailUrl: string;
  duration: string;
  category: string;
}

const videoSamples: VideoSample[] = [
  {
    id: 1,
    title: "Gaming Montage",
    thumbnailUrl: "https://images.unsplash.com/photo-1542751371-adc38448a05e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450",
    duration: "3:45",
    category: "Gaming"
  },
  {
    id: 2,
    title: "Motion Graphics Showcase",
    thumbnailUrl: "https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450",
    duration: "2:15",
    category: "Animation"
  },
  {
    id: 3,
    title: "Cinematic Short Film",
    thumbnailUrl: "https://images.unsplash.com/photo-1536240478700-b869070f9279?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450",
    duration: "5:30",
    category: "Cinematic"
  },
  {
    id: 4,
    title: "Brand Promotion",
    thumbnailUrl: "https://images.unsplash.com/photo-1498075702571-ecb018f3752d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450",
    duration: "1:45",
    category: "Commercial"
  }
];

const VideoSection = () => {
  return (
    <section id="video" className="py-24 px-4 bg-gray-50 relative">
      {/* Background pattern */}
      <div className="absolute inset-0 opacity-50" style={{
        backgroundImage: 'linear-gradient(to right, rgba(12, 175, 96, 0.05) 1px, transparent 1px), linear-gradient(to bottom, rgba(12, 175, 96, 0.05) 1px, transparent 1px)',
        backgroundSize: '40px 40px'
      }}></div>
      
      <div className="max-w-7xl mx-auto relative">
        {/* Section header */}
        <motion.div 
          variants={staggerContainer()}
          initial="hidden"
          whileInView="show"
          viewport={{ once: true, amount: 0.25 }}
          className="text-center mb-16"
        >
          <motion.span 
            variants={fadeIn('up', 'tween', 0.1, 0.5)}
            className="inline-block py-1 px-3 rounded-full text-xs font-medium bg-[rgba(12,175,96,0.1)] text-[#0CAF60] mb-4"
          >
            OUR VIDEO EDITS
          </motion.span>
          <motion.h2 
            variants={fadeIn('up', 'tween', 0.2, 0.5)}
            className="text-3xl md:text-5xl font-bold mb-4"
          >
            <span className="text-[#111111]">Video</span> <span className="bg-gradient-to-r from-[#0CAF60] to-[#02DF5A] text-transparent bg-clip-text">Editing</span>
          </motion.h2>
          <motion.p 
            variants={fadeIn('up', 'tween', 0.3, 0.5)}
            className="text-gray-600 max-w-3xl mx-auto"
          >
            Professional video editing services that transform raw footage into compelling visual stories that captivate your audience.
          </motion.p>
        </motion.div>
        
        {/* Video Samples Grid */}
        <motion.div 
          variants={staggerContainer()}
          initial="hidden"
          whileInView="show"
          viewport={{ once: true, amount: 0.1 }}
          className="grid grid-cols-1 md:grid-cols-2 gap-8"
        >
          {videoSamples.map((video, index) => (
            <motion.div 
              key={video.id}
              variants={fadeIn('up', 'tween', index * 0.1, 0.6)}
              className="video-card bg-white rounded-xl shadow-lg overflow-hidden transform transition-transform duration-500"
              style={{ boxShadow: '0 10px 30px -5px rgba(12, 175, 96, 0.1)' }}
            >
              <div className="relative h-56 md:h-72 overflow-hidden">
                {/* Category tag */}
                <div className="absolute top-4 left-4 z-10 bg-black bg-opacity-70 text-white text-xs font-bold px-3 py-1 rounded-full">
                  {video.category}
                </div>
                
                {/* Duration */}
                <div className="absolute bottom-4 right-4 z-10 bg-black bg-opacity-70 text-white text-xs font-medium px-2 py-1 rounded-md">
                  {video.duration}
                </div>
                
                <img 
                  src={video.thumbnailUrl} 
                  alt={`${video.title} thumbnail`} 
                  className="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                />
                
                <div className="absolute inset-0 flex items-center justify-center">
                  <motion.div 
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.95 }}
                    className="w-16 h-16 bg-[#0CAF60] rounded-full flex items-center justify-center cursor-pointer shadow-lg"
                    style={{ boxShadow: '0 0 20px rgba(12, 175, 96, 0.5)' }}
                  >
                    <Play className="text-white h-6 w-6 ml-1" />
                  </motion.div>
                </div>
                
                {/* Hover overlay */}
                <div className="absolute inset-0 bg-[#0CAF60] opacity-0 group-hover:opacity-30 transition-opacity duration-300"></div>
              </div>
              
              <div className="p-6">
                <h3 className="font-bold text-xl">{video.title}</h3>
              </div>
            </motion.div>
          ))}
        </motion.div>
        
        {/* Call to action */}
        <motion.div 
          variants={fadeIn('up', 'tween', 0.5, 1)}
          initial="hidden"
          whileInView="show"
          viewport={{ once: true, amount: 0.1 }}
          className="flex justify-center mt-12"
        >
          <a 
            href="#contact" 
            className="bg-[#0CAF60] text-white font-medium py-2.5 px-6 rounded-full hover:bg-[#089e51] transition-all duration-300 flex items-center gap-2 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
          >
            Get Professional Video Editing
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
              <path d="M5 12h14"></path>
              <path d="m12 5 7 7-7 7"></path>
            </svg>
          </a>
        </motion.div>
      </div>
    </section>
  );
};

export default VideoSection;